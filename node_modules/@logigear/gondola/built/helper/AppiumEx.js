"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r),Object.defineProperty(e,i,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__decorate=this&&this.__decorate||function(e,t,r,i){var o,a=arguments.length,n=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,r,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(n=(a<3?o(n):a>3?o(t,r,n):o(t,r))||n);return a>3&&n&&Object.defineProperty(t,r,n),n},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AppiumEx=void 0;const assert_1=__importDefault(require("assert")),util_1=require("util"),constants_1=require("../constants"),deco_1=require("../deco"),errors=__importStar(require("../errors")),util_2=require("./../util"),Utils=__importStar(require("./utils/WebUtils")),ElementNotFound=require("codeceptjs/lib/helper/errors/ElementNotFound"),Appium=require("codeceptjs/lib/helper/Appium"),Locator=require("codeceptjs/lib/locator"),timingHandler_1=require("../lib/timingHandler");class AppiumEx extends Appium{async _startBrowser(){await super._startBrowser(),this._isMultiRemote()&&(this.mainBrowser=this.browser)}async _after(){this._isMultiRemote()&&(this.browser=this.mainBrowser,this.$$=this.browser.$$.bind(this.browser)),await super._after()}async tap(e){const t=await this._locate(this._parseLocator.call(this,e),!0);if(!this.isWeb)return this.browser.touchAction({action:"tap",element:t[0]});{const e=t[0],r=Utils.getElementId(e);!1===await e.isDisplayedInViewport()&&await e.scrollIntoView(),await this.browser.elementClick(r)}}async runOnAndroid(e,t){await super.runOnAndroid(e,t)}async runOnIOS(e,t){await super.runOnIOS(e,t)}async checkAppIsInstalled(e){const t=await this.browser.isAppInstalled(e),r=new errors.AppNotInstalled(e).message;assert_1.default.equal(t,!0,r)}async getCurrentBrowser(){return this.browser}async sendDeviceKeyEvent(e){if(util_1.isNullOrUndefined(e))throw new errors.GError(errors.GErrorKey.ArgKeyValueNotSet);return await super.sendDeviceKeyEvent(e)}async fillField(e,t){try{await super.fillField(e,t)}catch(e){if(e.message.includes("Keyboard is not present")||e.message.includes("The on-screen keyboard must be present to send keys"))throw new errors.EnterDisableElementError(util_2.getLocatorString(t));throw new Error(e.message)}}async swipe(e,t,r,i){const o=await this.getElementBounds(e),a=o.left+o.width/2,n=o.top+o.height/2;await this.swipeByCoordinates(a,n,t,r,i)}async swipeByCoordinates(e,t,r,i,o){try{if(e<0||t<0)throw new errors.NegativeNumberError;if(o&&o<=0)throw new errors.NegativeNumberError;let a=1e3;void 0!==o&&(a=1e3*o);const n={x:e,y:t},s={x:e+r,y:t+i};await this.browser.touchPerform([{action:"press",options:n},{action:"wait",options:{ms:Math.floor(a)}},{action:"moveTo",options:s},{action:"release"}])}catch(e){if(e.name&&e.name.match(/invalid coordinates/gi))throw new errors.GError(errors.GErrorKey.SwipeOffofScreen);throw e}}async saveScreenshot(e,t){await super.saveScreenshot(e,!1)}async getElementBounds(e){let t=[];t=this.isWeb?await this._locate(e,!0):await this._locate(this._parseLocator.call(this,e),!0);const r=t[0],i=await this._getElementLocation(r),o=i.x,a=i.y,n=await this._getElementSize(r);return{left:o,top:a,width:n.width,height:n.height}}async grabNumberOfVisibleElements(e){return this.isWeb?await super.grabNumberOfVisibleElements(e):await super.grabNumberOfVisibleElements(this._parseLocator.call(this,e))}async grabAttributeFrom(e,t){return this.isWeb?await super.grabAttributeFrom(e,t):await super.grabAttributeFrom(this._parseLocator.call(this,e),t)}async hideDeviceKeyboard(e,t){if("gTapOut"!==e)await super.hideDeviceKeyboard(e,t);else{await super.hideDeviceKeyboard(void 0,t);let e=!0;const r=Date.now();for(;"ios"===this.platform&&Date.now()<r+2e3&&e;)e=await this.browser.isKeyboardShown();if(e&&"ios"===this.platform){const e=await this._locate({className:"XCUIElementTypeKeyboard"},!0);if(e&&e.length>0){const t=await e[0].getLocation();await this.browser.touchPerform([{action:"tap",options:{x:-100,y:t.y}}])}}}}async getDeviceScreenSize(){const e=await this.getCurrentBrowser();return await e.getWindowSize()}async getAllContexts(){return super.grabAllContexts()}async getContext(){return super.grabContext()}async switchToContext(e){if(""===e)throw new errors.InvalidInputArgumentError("context");return super._switchToContext(e)}async executeCommand(e,t){if(""===e)throw new errors.InvalidInputArgumentError("command");const r=await this.getCurrentBrowser();return t?r.executeScript(e,t):r.executeScript(e,[])}async setPickerValue(e,t){if(0===t.length)throw new errors.InvalidInputArgumentError("value");let r=[];if(r=this.isWeb?await this._locate(e,!0):await this._locate(this._parseLocator.call(this,e),!0),0===r.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(e));const i=r[0];let o=[];if("ios"===this.platform?o=await i.$$("//XCUIElementTypePickerWheel"):"android"===this.platform&&(o=await i.$$("//android.widget.NumberPicker")),0===o.length)throw new errors.ElementNotSupportError(util_2.getLocatorString(e));if(t instanceof Array&&o.length!==t.length)throw new errors.InvalidInputArgumentError(t.toString());const a=await this.getCurrentBrowser();for(let e=0;e<o.length;e++){if(void 0===t[e])continue;let r;r=t instanceof Array?t[e]:t;try{let i;if("ios"===this.platform)await a.setValueImmediate(o[e].elementId,r),i=await o[e].getText();else if("android"===this.platform){const t=await o[e].$$("//*");if(0===t.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(o[e]));let a=t[t.length/2];const n=await a.getText();i=await a.getText();let s=!1,c=!1;for(;i!==r&&!c;){let e=t[t.length/2+1];const r=t[t.length/2-1],o=i;if(n!==await e.getText()&&!1===s){await e.click(),await this.delay(100),a=t[t.length/2],i=await a.getText(),e=t[t.length/2+1];await e.getText()===n&&(c=!0)}o===i&&(s=!0,await r.click(),await this.delay(100),a=t[t.length/2],i=await a.getText(),o===i&&(c=!0))}}if(i!==r)throw t instanceof Array?new errors.ValueNotMatchAtIndexError(util_2.getLocatorString((e+1).toString())):new errors.ValueNotMatchError(util_2.getLocatorString(r))}catch(e){throw e}}}async delay(e){return new Promise(t=>setTimeout(t,e))}async _getElementLocation(e){return await e.getLocation()}async _getElementSize(e){return await e.getSize()}_isMultiRemote(){return this.config.multiremote}_parseLocator(e){if(!e)return null;if(typeof e===constants_1.TYPE_OF_VAR.OBJECT){if(e.web&&this.isWeb)return this._parseLocator.call(this,e.web);if(e.android&&"android"===this.platform)return this._parseLocator.call(this,e.android);if(e.ios&&"ios"===this.platform)return this._parseLocator.call(this,e.ios)}if(typeof e===constants_1.TYPE_OF_VAR.STRING){if("~"===e[0])return e;if("//"===e.substr(0,2))return e;if("#"===e[0]&&!this.isWeb)return this._parseLocator.call(this,{id:e.slice(1)});if("android"===this.platform&&!this.isWeb)return`android=new UiSelector().text("${e}")`;if("ios"===this.platform&&!this.isWeb)return`//*[@value='${e}' or @label='${e}']`}if("css"===(e=new Locator(e,"xpath")).type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingCSSLocatorInApp);if("name"===e.type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingNameLocatorInNative);return"id"!==e.type||this.isWeb||"android"!==this.platform?e.simplify():`//*[@resource-id='${e.value}']`}_assertEmptyLocator(e){if(util_2.isEmpty(e))throw new errors.LocatorEmptyError}}__decorate([deco_1.action("tap",""),timingHandler_1.timing([timingHandler_1.TimingOption.Visible,timingHandler_1.TimingOption.Enable])],AppiumEx.prototype,"tap",null),__decorate([deco_1.action("run on Android","")],AppiumEx.prototype,"runOnAndroid",null),__decorate([deco_1.action("run on IOS","")],AppiumEx.prototype,"runOnIOS",null),__decorate([deco_1.action("check app is installed","")],AppiumEx.prototype,"checkAppIsInstalled",null),__decorate([deco_1.action("get current browser","")],AppiumEx.prototype,"getCurrentBrowser",null),__decorate([deco_1.action("send device key event","")],AppiumEx.prototype,"sendDeviceKeyEvent",null),__decorate([deco_1.action("fillField","")],AppiumEx.prototype,"fillField",null),__decorate([deco_1.action("swipe","")],AppiumEx.prototype,"swipe",null),__decorate([deco_1.action("swipe by coordinates","")],AppiumEx.prototype,"swipeByCoordinates",null),__decorate([deco_1.action("save screen shot","")],AppiumEx.prototype,"saveScreenshot",null),__decorate([deco_1.action("get element bounds",""),timingHandler_1.timing([])],AppiumEx.prototype,"getElementBounds",null),__decorate([deco_1.action("grab number of visible elements","")],AppiumEx.prototype,"grabNumberOfVisibleElements",null),__decorate([deco_1.action("grab attribute from","")],AppiumEx.prototype,"grabAttributeFrom",null),__decorate([deco_1.action("hide device keyboard","")],AppiumEx.prototype,"hideDeviceKeyboard",null),__decorate([deco_1.action("get device screen size","")],AppiumEx.prototype,"getDeviceScreenSize",null),__decorate([deco_1.action("get all contexts","")],AppiumEx.prototype,"getAllContexts",null),__decorate([deco_1.action("get context","")],AppiumEx.prototype,"getContext",null),__decorate([deco_1.action("switch to context","")],AppiumEx.prototype,"switchToContext",null),__decorate([deco_1.action("execute command","")],AppiumEx.prototype,"executeCommand",null),__decorate([deco_1.action("set picker value","")],AppiumEx.prototype,"setPickerValue",null),exports.AppiumEx=AppiumEx,module.exports=AppiumEx;
//# sourceMappingURL=../../debug/helper/AppiumEx.js.map
