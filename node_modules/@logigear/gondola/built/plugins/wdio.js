"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const debug=require("debug")("@logigear/gondola:plugins:wdio"),path_1=__importDefault(require("path")),fs_1=__importDefault(require("fs")),container=require("codeceptjs/lib/container"),mainConfig=require("codeceptjs/lib/config"),recorder=require("codeceptjs/lib/recorder"),event=require("codeceptjs/lib/event"),output=require("codeceptjs/lib/output"),defaultConfig={services:[],capabilities:{}};let restartsSession;function safeRequire(e){try{return require(e)}catch(t){if(!t.message.match(`Cannot find module '${e}'`))throw new Error(`Couldn't initialise "${e}".\n${t.stack}`);return null}}module.exports=e=>{const t=container.helpers("WebDriver");t&&(e=Object.assign(t.options,e),restartsSession=!!e.restart),e=Object.assign(defaultConfig,e);const r=[],s=[];for(const t of e.services){const i=safeRequire(`@wdio/${t.toLowerCase()}-service`);if(!i)throw new Error(`Couldn't initialize service ${t} from wdio plugin config.\nIt should be available either in '@wdio/${t.toLowerCase()}-service' package`);if(i.launcher&&"function"==typeof i.launcher){const t=i.launcher;if(0===JSON.parse(fs_1.default.readFileSync(path_1.default.join(require.resolve("webdriverio"),"/../../","package.json")).toString()).version.indexOf("5"))s.push(new t(e));else{const r={logPath:global.output_dir,drivers:e.drivers,installArgs:e.seleniumInstallArgs,args:e.seleniumArgs,skipSeleniumInstall:e.skipSeleniumInstall};s.push(new t(r,[e.capabilities],e))}}"function"==typeof i&&r.push(new i(e,e.capabilities))}debug(`services ${r}, launchers ${s}`),recorder.startUnlessRunning();for(const e of s)n(e);for(const e of r)i(e);function i(r){const s=r.constructor.name;if(r.beforeSession&&event.dispatcher.on(event.all.before,()=>{recorder.add(`service ${s} all.before`,async()=>{await r.beforeSession(e,e.capabilities)})}),r.afterSession&&event.dispatcher.on(event.all.result,e=>{recorder.add(`service ${s} all.after`,async()=>{await r.afterSession(e)})}),r.beforeSuite&&event.dispatcher.on(event.suite.before,e=>{debug("suite started: "+e.title),recorder.add(`service ${s} suite.before`,()=>r.beforeSuite(e))}),r.afterSuite&&event.dispatcher.on(event.suite.after,e=>{debug("suite finished: "+e.title),recorder.add(`service ${s} suite.after`,()=>r.afterSuite(e))}),r.beforeTest&&event.dispatcher.on(event.test.started,async e=>{e.parent&&(e.parent.toString=()=>e.parent.title),debug("test started: "+e.title),t&&(global.browser=t.browser,global.browser.config=Object.assign(mainConfig.get(),global.browser.config)),await r.beforeTest(e)}),r.afterTest&&event.dispatcher.on(event.test.finished,async e=>{debug("test finished: "+e.title),await r.afterTest(e)}),restartsSession&&r.before&&event.dispatcher.on(event.test.started,e=>r.before()),restartsSession&&r.after&&event.dispatcher.on(event.test.finished,e=>r.after()),!restartsSession&&r.before){let e=!1;event.dispatcher.on(event.test.started,async t=>{e||(await r.before(),e=!0)})}!restartsSession&&r.after&&event.dispatcher.on(event.all.result,e=>r.after(e))}function n(t){const r=t.constructor.name;t.onPrepare&&event.dispatcher.on(event.all.before,()=>{recorder.add(`launcher ${r} start`,async()=>{await t.onPrepare(e,e.capabilities),output.debug("Started "+r)})}),t.onComplete&&event.dispatcher.on(event.all.after,()=>{recorder.add(`launcher ${r} start`,async()=>{await t.onComplete(process.exitCode,e,e.capabilities),output.debug("Stopped "+r)})})}};
//# sourceMappingURL=../../debug/plugins/wdio.js.map
